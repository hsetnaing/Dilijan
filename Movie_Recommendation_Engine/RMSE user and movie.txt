private void RMSEUser(String UserA_ID) throws FileNotFoundException {
        //values I need:
        //number of movies a user has watched (size of MovieRatings array)
        //actual rating for each movie
        //predicted rating for each movie

        //important: we have to run predict rating first!
        //there will be no such thing as an OldUsers array list UNTIL we run PredictRating();

        //I need to have a working OldUsers array list...
        //I have called on this function just so I have all the info that I need
        //but I won't use it. Sole purpose is to have a working OldUsers array list with all the info
        PredictRating(UserA_ID, "moviedata/mv_0000002.txt"); //it's ok to hardcode movie here bc when you try to find a particular user, you will already know what movie file they are in
        //this works perfectly. Now we just need to find the rating for all other movies


        int index;
        index = FindUserIndex(UserA_ID);
        User UserA = OldUsers.get(index);
        int numberofmovies = UserA.MovieRatings.size();
        double predictedrating;
        String MovieFile;

        System.out.println("USERID: "+ UserA.ID);

        for(int i = 0; i < UserA.MovieRatings.size(); i++){


            MovieFile = UserA.MovieRatings.get(i).Movie;

            System.out.println("MovieFile: "+MovieFile);

            predictedrating = PredictRating(UserA_ID, MovieFile); //iterate through all movie files

            System.out.println("predicted rating: " + predictedrating);

            UserA.MovieRatings.get(i).PredictedRating = predictedrating; //assign value to attribute of object
        }

        System.out.println("Size of array: " + UserA.MovieRatings.size());


        for(int i = 0; i < UserA.MovieRatings.size();i++){
            System.out.println("Predicted Rating: " + UserA.MovieRatings.get(i).PredictedRating + ", Actual Rating: " + UserA.MovieRatings.get(i).Rating);
        }



        double SUM = 0;
        double diff = 0;
        for(int i=0; i <UserA.MovieRatings.size();i++){
           diff = (UserA.MovieRatings.get(i).PredictedRating - UserA.MovieRatings.get(i).Rating);
            SUM = SUM + diff*diff;
        }

        double rmseUser = 0;
        rmseUser = Math.sqrt(SUM/numberofmovies);

        System.out.println("rmse_user: "+rmseUser);

    }

    private void RMSEMovie(String MovieFile) throws FileNotFoundException {
        //number of ratings -> found using ReturnUserID
        ArrayList<String> MovieWatchers = new ArrayList<>();
        MovieWatchers = ReturnUserID(MovieFile); //this is the array list
        int numberofratings = MovieWatchers.size();



    }